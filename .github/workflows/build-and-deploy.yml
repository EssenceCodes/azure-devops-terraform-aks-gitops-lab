name: Build and Deploy to AKS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY_NAME: ${{ secrets.REGISTRY_NAME }} # e.g. myacr
  IMAGE_NAME: flask-api
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
  AKS_CLUSTER: ${{ secrets.AKS_CLUSTER }}
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }} # e.g. myacr.azurecr.io

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry
        run: az acr login --name $REGISTRY_NAME

      - name: Build Docker image
        run: |
          docker build -t $ACR_LOGIN_SERVER/$IMAGE_NAME:${{ github.sha }} ./app

      - name: Push image to ACR
        run: |
          docker push $ACR_LOGIN_SERVER/$IMAGE_NAME:${{ github.sha }}

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_CLUSTER --overwrite-existing

      - name: Deploy to AKS
        run: |
          kubectl set image deployment/flask-api-deployment \
            flask-api-container=$ACR_LOGIN_SERVER/$IMAGE_NAME:${{ github.sha }} \
            -n default
          kubectl rollout status deployment/flask-api-deployment -n default